@using RewardsAndRecognitionRepository.Models
@inject SignInManager<User> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}

<style>
    .custom-nav .nav-link {
        color: #555 !important; /* Default text color */
        background-color: transparent;
        transition: color 0.3s, background-color 0.3s;
        font-weight: 500;
    }

        .custom-nav .nav-link:hover {
            color: black !important; /* Blue on hover */
            background-color: #f0f0f0; /* Light background on hover */
        }

        .custom-nav .nav-link.active {
            color: white !important;
            background-color: #007bff !important; /* Bootstrap primary */
            font-weight: bold;
            box-shadow: 0 2px 8px rgba(0, 123, 255, 0.3);
        }

</style>

<ul class="nav nav-pills justify-content-center mb-4 custom-nav" role="tablist">
    <li class="nav-item" role="presentation">
        <a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile-tab" asp-page="./Index">Profile</a>
    </li>
    <li class="nav-item" role="presentation">
        <a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="password-tab" asp-page="./ChangePassword">Password</a>
    </li>
    @if (hasExternalLogins)
    {
        <li class="nav-item" role="presentation">
            <a class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" id="external-login-tab" asp-page="./ExternalLogins">External Logins</a>
        </li>
    }
</ul>
