@model List<RewardsAndRecognitionRepository.Models.GroupedTeam>
@{
    ViewData["Title"] = "Teams Overview";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var userRoles = ViewBag.UserRoles as Dictionary<string, string>;
}

<link rel="stylesheet" href="~/lib/Layout/bootstrap-icons.css" />


<style>
    /* Make toggle switch red when checked */
    .form-check-input:checked {
        background-color: #dc3545 !important; /* Bootstrap danger */
        border-color: #dc3545 !important;
    }



    .team-card {
        border: 1px solid #e0e0e0;
        border-radius: 14px;
        margin-bottom: 20px;
        box-shadow: 0 6px 18px rgba(0, 0, 0, 0.06);
        overflow: hidden;
        transition: transform 0.3s ease;
    }

        .team-card:hover {
            transform: scale(1.01);
        }

    .team-header {
        background: linear-gradient(to right, #3f51b5, #5c6bc0);
        color: white;
        padding: 18px 24px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
    }

    .team-actions-inline {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .btn-edit,
    .btn-delete {
        padding: 4px 10px;
        font-size: 0.8rem;
        border-radius: 5px;
        border: none;
        color: white;
    }

    .btn-edit {
        background-color: #3f51b5;
    }

        .btn-edit:hover {
            background-color: #303f9f;
        }

    .btn-delete {
        background-color: #dc3545;
    }

        .btn-delete:hover {
            background-color: #c82333;
        }

   
    .team-body {
        max-height: 0;
        overflow: hidden;
        background-color: #fff;
        padding: 0 24px;
        transition: max-height 0.6s ease, padding 0.4s ease;
        opacity: 0;
        transform: scaleY(0.95);
        transform-origin: top;
        pointer-events: none;
    }

        .team-body.open {
            max-height: 1000px;
            padding: 20px 24px;
            opacity: 1;
            transform: scaleY(1);
            pointer-events: auto;
        }

    .toggle-icon {
        font-size: 1.2rem;
        transition: transform 0.3s ease;
        cursor: pointer;
    }

    .rotate {
        transform: rotate(90deg);
    }

    .users-table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 12px;
    }

        .users-table th {
            color: #3f51b5;
            padding: 12px 10px;
            border-bottom: 1px solid #eee;
        }



        .users-table td {
            padding: 12px 10px;
            border-bottom: 1px solid #eee;
        }

    .info-row {
        display: flex;
        justify-content: space-between;
        margin-bottom: 12px;
        font-weight: 500;
        font-size: 0.95rem;
    }

    .create-btn {
        background: linear-gradient(to right, #3f51b5, #5c6bc0);
        color: white;
        padding: 8px 16px;
        border-radius: 6px;
        text-decoration: none;
        font-weight: 500;
    }

        .create-btn:hover {
            background-color: #2e7d32;
            color: white;
        }

    .search-container {
        width: 250px;
        position: relative;
    }

        .search-container input {
            border-radius: 20px;
            padding: 6px 30px 6px 12px;
            border: 1px solid #ccc;
            transition: all 0.3s ease;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
            font-size: 0.9rem;
        }

            .search-container input:focus {
                outline: none;
                border-color: #3f51b5;
                box-shadow: 0 0 6px rgba(63, 81, 181, 0.4);
            }

        .search-container .clear-icon {
            position: absolute;
            top: 50%;
            right: 10px;
            transform: translateY(-50%);
            font-size: 0.85rem;
            color: #999;
            cursor: pointer;
            display: none;
            transition: color 0.2s ease;
        }

            .search-container .clear-icon:hover {
                color: #333;
            }

        .search-container input:not(:placeholder-shown) + .clear-icon {
            display: block;
        }

    .modal.top-centered .modal-dialog {
        position: fixed;
        top: 10%;
        left: 50%;
        transform: translate(-50%, 0);
        margin: 0;
        z-index: 1055;
    }

    .modal.top-centered .modal-content {
        border-radius: 16px;
        box-shadow: 0 12px 30px rgba(0, 0, 0, 0.2);
        animation: dropIn 0.35s ease forwards;
    }

    @@keyframes dropIn {
        from {
            opacity: 0;
            transform: translateY(-20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
</style>

<div class="d-flex justify-content-between align-items-center mb-3 flex-wrap gap-2">
    <h3 class="fw-bold d-flex align-items-center mb-0">
        <i class="bi bi-diagram-3-fill me-2"></i> Teams
    </h3>

    <div class="d-flex align-items-center gap-3">
        <div class="form-check form-switch m-0">
            <input class="form-check-input" type="checkbox" role="switch" id="toggleTeamFilter"
                   @(ViewBag.ShowDeleted ? "checked" : "")>
            <label class="form-check-label ms-2" for="toggleTeamFilter">
                Show Deleted
            </label>
        </div>

        <a asp-action="Create" class="create-btn d-inline-flex align-items-center gap-2">
            <i class="bi bi-plus-circle"></i> Create Team
        </a>
    </div>
</div>


@foreach (var group in Model)
{
    var team = group.Team;
    var teamId = $"team_{team.Id}";
    var iconId = $"icon_{team.Id}";
    var isDeleted = team.IsDeleted;

    <div class="team-card">
        <div class="team-header">
            <h5 class="mb-0 d-flex align-items-center">
                <i class="bi bi-diagram-3-fill me-1"></i> @team.Name
               
            </h5>

            <div class="team-actions-inline">
                <span><strong>Lead:</strong> @(team.TeamLead?.Name ?? "Not Assigned")</span>

                @if (!isDeleted)
                {
                    <a href="javascript:void(0);" class="btn-edit btn me-1" onclick="openEditModal('@team.Id')">
                        <i class="bi bi-pencil-square"></i>
                    </a>
                    <a href="javascript:void(0);" onclick="confirmDelete('@team.Id')" class="btn-delete btn">
                        <i class="bi bi-trash-fill"></i>
                    </a>
                }
                else
                {
                    <button class="btn btn-secondary btn-sm me-1" disabled>
                        <i class="bi bi-pencil-fill"></i>
                    </button>
                    <button class="btn btn-danger btn-sm" disabled>
                        <i class="bi bi-trash-fill"></i>
                    </button>
                }

                <i class="bi bi-chevron-right toggle-icon" id="@iconId" onclick="toggleTeam('@teamId', '@iconId')"></i>
            </div>
        </div>

        <div class="team-body" id="@teamId">
            <table class="users-table">
                <thead>
                    <tr>
                        <th><i class="bi bi-person-fill"></i> Name</th>
                        <th><i class="bi bi-envelope-fill"></i> Email</th>
                        <th><i class="bi bi-shield-lock-fill"></i> Role</th>
                    </tr>
                </thead>
                <tbody>
                    @if (team.Director != null)
                    {
                        <tr class="table-info fw-semibold">
                            <td>@team.Director.Name</td>
                            <td>@team.Director.Email</td>
                            <td>Director</td>
                        </tr>
                    }
                    @if (team.Manager != null)
                    {
                        <tr class="table-success fw-semibold">
                            <td>@team.Manager.Name</td>
                            <td>@team.Manager.Email</td>
                            <td>Manager</td>
                        </tr>
                    }
                    @if (group.Users != null && group.Users.Any())
                    {
                        @foreach (var user in group.Users)
                        {
                            if (user.Id != team.Director?.Id && user.Id != team.Manager?.Id)
                            {
                                <tr>
                                    <td>@user.Name</td>
                                    <td>@user.Email</td>
                                    <td>@(userRoles != null && userRoles.ContainsKey(user.Id) ? userRoles[user.Id] : "N/A")</td>
                                </tr>
                            }
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="3" class="text-muted text-center">No users assigned to this team.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}

<div class="modal fade top-centered" id="deleteModal" tabindex="-1">
    <div class="modal-dialog modal-md">
        <div class="modal-content delete-modal-content">
            <form method="post" id="deleteForm">
                <div class="modal-header border-0 pb-0">
                    <h6 class="modal-title text-danger fw-semibold">
                        <i class="bi bi-exclamation-triangle-fill me-2"></i> Confirm Deletion
                    </h6>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body text-center text-muted small">
                    Are you sure you want to delete this team?
                </div>
                <div class="modal-footer border-0 pt-0 justify-content-center">
                    <button type="button" class="btn btn-sm btn-secondary px-3" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-sm btn-danger px-3">
                        <i class="bi bi-trash"></i> Delete
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function toggleTeam(id, iconId) {
            const section = document.getElementById(id);
            const icon = document.getElementById(iconId);
            section.classList.toggle("open");
            icon.classList.toggle("rotate");
        }

               function confirmDelete(teamId) {
            const activeBtn = document.activeElement;
            if (activeBtn) {
                activeBtn.blur();
            }

            Swal.fire({
                title: 'Are you sure?',
                text: "This action cannot be undone.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, delete it!',
                cancelButtonText: 'No, cancel!',
                reverseButtons: true,
                focusConfirm: false,
                focusCancel: false,
                didOpen: () => {
                    setTimeout(() => document.activeElement?.blur(), 10);
                },
                didClose: () => {
                    setTimeout(() => document.activeElement?.blur(), 10);
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    const form = document.createElement('form');
                    form.method = 'POST';
                    form.action = '/Team/Delete/' + teamId;

                    const token = document.querySelector('input[name="__RequestVerificationToken"]');
                    if (token) {
                        const hiddenToken = document.createElement('input');
                        hiddenToken.type = 'hidden';
                        hiddenToken.name = '__RequestVerificationToken';
                        hiddenToken.value = token.value;
                        form.appendChild(hiddenToken);
                    }

                    document.body.appendChild(form);
                    form.submit();
                }
            });
        }


        function filterTeams() {
            const query = document.getElementById("searchBox").value.toLowerCase();
            document.querySelectorAll(".team-card").forEach(card => {
                const name = card.querySelector(".team-header h5").textContent.toLowerCase();
                card.style.display = name.includes(query) ? "" : "none";
            });
        }

        function clearSearch() {
            const searchBox = document.getElementById("searchBox");
            searchBox.value = "";
            filterTeams();
        }

        function openEditModal(teamId) {
            window.location.href = `/Team/Edit/${teamId}`;
        }
           
        document.getElementById("toggleTeamFilter")?.addEventListener("change", function () {
            const showDeleted = this.checked;

            window.location.href = `/Team/Index?showDeleted=${showDeleted}`;
        });
    

    </script>
}
@if(Model.Any())
{
<div class="d-flex justify-content-between align-items-center mt-4 mb-2" style="min-height: 50px;">

    <!-- Left: Page info -->
    <div>
        Page @ViewBag.CurrentPage of @ViewBag.TotalPages
    </div>

    <!-- Right: Minimal Pagination -->
    <nav>
        <ul class="pagination mb-0">
            <li class="page-item @(ViewBag.CurrentPage <= 1 ? "disabled" : "")">
                <a class="page-link"
                   asp-action="Index"
                   asp-route-page="@(ViewBag.CurrentPage - 1)"
                   asp-route-showDeleted="@(ViewBag.ShowDeleted)">
                    Previous
                </a>
            </li>

            <li class="page-item active">
                <span class="page-link">
                    @ViewBag.CurrentPage
                </span>
            </li>

            <li class="page-item @(ViewBag.CurrentPage >= ViewBag.TotalPages ? "disabled" : "")">
                <a class="page-link"
                   asp-action="Index"
                   asp-route-page="@(ViewBag.CurrentPage + 1)"
                   asp-route-showDeleted="@(ViewBag.ShowDeleted)">
                    Next
                </a>
            </li>
        </ul>
    </nav>
</div>

}



