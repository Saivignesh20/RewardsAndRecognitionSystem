@model List<RewardsAndRecognitionRepository.Models.GroupedTeam>

@{

    ViewData["Title"] = "Teams Overview";

    Layout = "~/Views/Shared/_Layout.cshtml";

    var userRoles = ViewBag.UserRoles as Dictionary<string, string>;

}



<!-- Your styles and existing code here (unchanged) -->

<link rel="stylesheet" href=https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css />



<style>

    .team-card {
        border: 1px solid #e0e0e0;
        border-radius: 14px;
        margin-bottom: 20px;
        box-shadow: 0 6px 18px rgba(0, 0, 0, 0.06);
        overflow: hidden;
        transition: transform 0.3s ease;
    }



        .team-card:hover {
            transform: scale(1.01);
        }



    .team-header {
        background: linear-gradient(to right, #3f51b5, #5c6bc0);
        color: white;
        padding: 18px 24px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
    }



    .team-actions-inline {
        display: flex;
        align-items: center;
        gap: 10px;
    }



    .btn-edit,
    .btn-delete {
        padding: 4px 10px;
        font-size: 0.8rem;
        border-radius: 5px;
        border: none;
        color: white;
    }



    .btn-edit {
        background-color: #3f51b5;
    }



        .btn-edit:hover {
            background-color: #303f9f;
        }



    .btn-delete {
        background-color: #dc3545;
    }



        .btn-delete:hover {
            background-color: #c82333;
        }



    .team-body {
        max-height: 0;
        overflow: hidden;
        background-color: #fff;
        padding: 0 24px;
        transition: max-height 0.6s ease, padding 0.4s ease;
        opacity: 0;
        transform: scaleY(0.95);
        transform-origin: top;
        pointer-events: none;
    }



        .team-body.open {
            max-height: 1000px;
            padding: 20px 24px;
            opacity: 1;
            transform: scaleY(1);
            pointer-events: auto;
        }



    .toggle-icon {
        font-size: 1.2rem;
        transition: transform 0.3s ease;
        cursor: pointer;
    }



    .rotate {
        transform: rotate(90deg);
    }



    .users-table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 12px;
    }









        .users-table th {
            color: #3f51b5;
            padding: 12px 10px;
            border-bottom: 1px solid #eee;
        }

        .users-table td {
            padding: 12px 10px;
            border-bottom: 1px solid #eee;
        }



    .info-row {
        display: flex;
        justify-content: space-between;
        margin-bottom: 12px;
        font-weight: 500;
        font-size: 0.95rem;
    }



    .create-btn {
        background: linear-gradient(to right, #3f51b5, #5c6bc0);
        color: white;
        padding: 8px 16px;
        border-radius: 6px;
        text-decoration: none;
        font-weight: 500;
    }



        .create-btn:hover {
            background-color: #2e7d32;
            color: white;
        }



    .search-container {
        width: 250px;
        position: relative;
    }



        .search-container input {
            border-radius: 20px;
            padding: 6px 30px 6px 12px;
            border: 1px solid #ccc;
            transition: all 0.3s ease;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
            font-size: 0.9rem;
        }



            .search-container input:focus {
                outline: none;
                border-color: #3f51b5;
                box-shadow: 0 0 6px rgba(63, 81, 181, 0.4);
            }



        .search-container .clear-icon {
            position: absolute;
            top: 50%;
            right: 10px;
            transform: translateY(-50%);
            font-size: 0.85rem;
            color: #999;
            cursor: pointer;
            display: none;
            transition: color 0.2s ease;
        }



            .search-container .clear-icon:hover {
                color: #333;
            }



        .search-container input:not(:placeholder-shown) + .clear-icon {
            display: block;
        }



    /* Top-centered modal */

    .modal.top-centered .modal-dialog {
        position: fixed;
        top: 10%;
        left: 50%;
        transform: translate(-50%, 0);
        margin: 0;
        z-index: 1055;
    }



    .modal.top-centered .modal-content {
        border-radius: 16px;
        box-shadow: 0 12px 30px rgba(0, 0, 0, 0.2);
        animation: dropIn 0.35s ease forwards;
    }



    @@keyframes dropIn {

        from {
            opacity: 0;
            transform: translateY(-20px);
        }



        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

</style>





<!-- Search and Create (unchanged) -->

<div class="d-flex justify-content-between align-items-center mb-3 flex-wrap gap-2">

    <div class="search-container">

        <input type="text" id="searchBox" class="form-control form-control-sm pe-4" placeholder="Search teams..." oninput="filterTeams()" />

        <i class="bi bi-x-lg clear-icon" onclick="clearSearch()"></i>

    </div>



    <a asp-action="Create" class="create-btn d-inline-flex align-items-center gap-2">

        <i class="bi bi-plus-circle"></i> Create Team

    </a>

</div>

<div id="teamListContainer">
    @Html.Partial("_TeamListPartial", Model)
</div>


<!-- Edit Modal -->

<div class="modal fade" id="editModal" tabindex="-1">

    <div class="modal-dialog modal-lg modal-dialog-centered">

        <div class="modal-content">

            <div class="modal-body" id="editModalBody"></div>

        </div>

    </div>

</div>



<!-- Delete Modal -->

<div class="modal fade top-centered" id="deleteModal" tabindex="-1">

    <div class="modal-dialog modal-md">

        <div class="modal-content delete-modal-content">

            <form method="post" id="deleteForm">

                <div class="modal-header border-0 pb-0">

                    <h6 class="modal-title text-danger fw-semibold">

                        <i class="bi bi-exclamation-triangle-fill me-2"></i> Confirm Deletion

                    </h6>

                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>

                </div>

                <div class="modal-body text-center text-muted small">

                    Are you sure you want to delete this team?

                </div>

                <div class="modal-footer border-0 pt-0 justify-content-center">

                    <button type="button" class="btn btn-sm btn-secondary px-3" data-bs-dismiss="modal">Cancel</button>

                    <button type="submit" class="btn btn-sm btn-danger px-3">

                        <i class="bi bi-trash"></i> Delete

                    </button>

                </div>

            </form>

        </div>

    </div>

</div>



@section Scripts {

    <script>

        function toggleTeam(id, iconId) {

            const section = document.getElementById(id);

            const icon = document.getElementById(iconId);

            section.classList.toggle("open");

            icon.classList.toggle("rotate");

        }



        function confirmDelete(teamId) {

            document.getElementById("deleteForm").action = `/Team/Delete/${teamId}`;

            new bootstrap.Modal(document.getElementById("deleteModal")).show();

        }



        function filterTeams() {

            const query = document.getElementById("searchBox").value.toLowerCase();

            document.querySelectorAll(".team-card").forEach(card => {

                const name = card.querySelector(".team-header h5").textContent.toLowerCase();

                card.style.display = name.includes(query) ? "" : "none";

            });

        }



        function clearSearch() {

            const searchBox = document.getElementById("searchBox");

            searchBox.value = "";

            filterTeams();

        }



        function openEditModal(teamId) {

            fetch(`/Team/Edit/${teamId}`, {

                headers: {

                    'X-Requested-With': 'XMLHttpRequest'

                }

            })

                .then(res => res.text())

                .then(html => {

                    document.getElementById("editModalBody").innerHTML = html;

                    new bootstrap.Modal(document.getElementById('editModal')).show();

                });

        }

    </script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            $(document).on("click", ".pagination-link", function (e) {
                e.preventDefault(); // ⛔ This is required
                var page = $(this).data("page");

                $.ajax({
                    url: "/Team/Index?page=" + page,
                    type: "GET",
                    success: function (result) {
                        $("#teamListContainer").html(result); // ✅ Replace only the partial
                    },
                    error: function () {
                        alert("Failed to load data.");
                    }
                });
            });
        });
    </script>

}
