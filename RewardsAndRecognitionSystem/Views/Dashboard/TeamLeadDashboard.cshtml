@using Microsoft.Extensions.Localization
@using RewardsAndRecognitionSystem.Localization
@inject IStringLocalizer<SharedResource> localizer
@model IEnumerable<RewardsAndRecognitionRepository.Models.Nomination>
@using RewardsAndRecognitionRepository.Enums

@{
    ViewData["Title"] = "Team Lead Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="loadingSpinner" style="position: fixed; top: 0; left: 0; width: 100%; height: 100%;
     background-color: rgba(255, 255, 255, 0.8); z-index: 9999; display: flex;

     justify-content: center; align-items: center;">
    <div class="spinner-border text-primary" role="status" style="width: 3rem; height: 3rem;">
        <span class="visually-hidden">@localizer{"Loading..."]</span>
    </div>
</div>
<h2 class="mb-4"><i class="bi bi-award"></i> @localizer["Team Lead Dashboard"]</h2>
<div class="row mb-4">
    <div class="col-md-3">
        <label for="yearDropdown" class="form-label">@localizer["Select Year:"]</label>
        <select id="yearDropdown" class="form-select">
            <option value="">-- Select Year --</option>
        </select>
    </div>
    <div class="col-md-3">
        <label for="quarterDropdown" class="form-label">@localizer["Select Quarter:"]</label>
        <select id="quarterDropdown" class="form-select" disabled>
            <option value="">@localizer["-- Select Quarter --"]</option>
        </select>
    </div>
</div>
<style>
    .quarter-card {
        background-color: #f1f5ff;
        color: #002c75;
        border-radius: 0.75rem;
        padding: 0.75rem 1rem;
        font-size: 0.85rem;
        width: 12rem;
        text-align: left;
        border-left: 4px solid #0d6efd;
        transition: all 0.3s ease-in-out;
    }

        .quarter-card:hover {
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

    .dashboard-card {
        background: white;
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
        padding: 20px;
        transition: transform 0.2s ease;
        height: 100%;
        text-decoration: none;
    }

        .dashboard-card:hover {
            transform: translateY(-3px);
            text-decoration: none;
        }

    .dashboard-title {
        font-size: 1.1rem;
        font-weight: 600;
        margin-top: 10px;
        color: #555;
    }

    .dashboard-value {
        font-size: 1.75rem;
        font-weight: bold;
        margin-top: 5px;
        color: #222;
    }

    .clickable-card {
        text-decoration: none;
    }
</style>

<div class="row g-4 mb-4">
    <div class="col-md-3">
        <a href="javascript:void(0);" onclick="navigateToNominations('all')" class="clickable-card">

            <div class="dashboard-card">
                <div class="dashboard-title">@localizer["Total Nominations"]</div>
                <div class="dashboard-value text-blue">@ViewBag.TotalNominations</div>
            </div>
        </a>
    </div>
    <div class="col-md-3">
        <a href="javascript:void(0);" onclick="navigateToNominations('pending')" class="clickable-card">
            <div class="dashboard-card">
                <div class="dashboard-title">@localizer["Pending Reviews"]</div>
                <div class="dashboard-value text-orange">@ViewBag.PendingNominations</div>
            </div>
        </a>
    </div>
    <div class="col-md-3">
        <a href="javascript:void(0);" onclick="navigateToNominations('directorapproved')" class="clickable-card">
            <div class="dashboard-card">
                <div class="dashboard-title">@localizer["Final Approved"]</div>
                <div class="dashboard-value text-green">@ViewBag.FinalApprovedNominations</div>
            </div>
        </a>
    </div>
    <div class="col-md-3">
        <a href="javascript:void(0);" onclick="navigateToNominations('directorrejected')" class="clickable-card">
            <div class="dashboard-card">
                <div class="dashboard-title">@localizer["Final Rejected"]</div>
                <div class="dashboard-value text-danger">@ViewBag.RejectedNominations</div>
            </div>
        </a>
    </div>
</div>

<h4 class="mt-5 mb-3 text-primary">@localizer["Category-wise Breakdown"]</h4>
<div id="teamLeadChartsContainer" class="row row-cols-1 row-cols-md-2 g-4 mb-5"></div>
@section Scripts {
    <script src="~/lib/Charts/chart.js"></script>
    <script src="~/lib/Charts/chartjs-plugin-datalabels.js"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var yearQuarterId = '@ViewBag.ActiveQuarterId.ToString()';
            loadTeamLeadCategoryCharts(yearQuarterId);
        });

        function loadTeamLeadCategoryCharts(yearQuarterId) {
            $.get(`/Analytics/GetTeamLeadCategoryAnalytics?yearQuarterId=${yearQuarterId}`, function (data) {
                const container = $('#teamLeadChartsContainer');
                container.empty();
                const chartData = data.result || [];

                if (!chartData.length) {
                    container.append(`
                        <div class="col">
                            <div class="dashboard-card text-center p-4">
                                <h5 class="text-muted mb-2">@localizer["📉 No Data Available"]</h5>
                                <p class="mb-0">@localizer["No nominations found for the selected quarter."]</p>
                            </div>
                        </div>
                    `);
                    return;
                }

                chartData.forEach((item, index) => {
                    const canvasId = `barChart_${index}`;
                    container.append(`
                        <div class="col">
                            <div class="card shadow-sm h-100">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-center mb-2">
                                        <h5 class="card-title">${item.category}</h5>
                                    </div>
                                    <div class="scroll-wrapper">
                                        <canvas id="${canvasId}" height="280"></canvas>
                                    </div>
                                </div>
                            </div>
                        </div>
                    `);

                    const ctx = document.getElementById(canvasId).getContext('2d');
                                               Chart.defaults.devicePixelRatio = 1; // add once globally


           new Chart(ctx, {
        type: 'bar',
        data: {
            labels: [
                '@Html.Raw(localizer["Approved"])',  // Localized label for 'Approved'
                '@Html.Raw(localizer["Pending"])',   // Localized label for 'Pending'
                '@Html.Raw(localizer["Rejected"])'   // Localized label for 'Rejected'
            ],
            datasets: [{
                label: item.category,
                data: [item.approved, item.pending, item.rejected],
                backgroundColor: ['#2E7D32', '#F9A825', '#D32F2F'],
                borderRadius: 6,
                barThickness: 37
            }]
        },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: { display: false },
                    datalabels: {
                        anchor: 'end',
                        align: 'top',
                        font: { weight: 'bold', size: 14 },
                        color: '#333',
                        formatter: val => val > 0 ? val : ''
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        suggestedMax: Math.max(item.approved, item.pending, item.rejected) + 1,
                        ticks: { stepSize: 1, color: '#333' },
                        grid: { color: '#eee' }
                    },
                    x: {
                        ticks: { color: '#333' },
                        grid: { display: false }
                    }
                }
            },
            plugins: [ChartDataLabels]
                  });

                });
            });
        }
    </script>

    <script>
        window.addEventListener("load", function () {
            const spinner = document.getElementById("loadingSpinner");
            if (spinner) {
                spinner.style.display = "none";
            }
        });
    </script>
    <script>
            function navigateToNominations(filter) 
            {
                     const quarterId = document.getElementById("quarterDropdown").value;

                             if (!quarterId) {
            alert("Please select a quarter.");
            return;
        }


                     const url = `/Nomination/Index?filter=${filter}&yearQuarterId=${quarterId}`;
                     window.location.href = url;
            }

             $(document).ready(function () {
                 loadYears();

                 $('#yearDropdown').change(function () {
                     const year = $(this).val();
                     if (year) loadQuarters(year);
                     else $('#quarterDropdown').prop('disabled', true).html('<option>-- Select Quarter --</option>');
                 });

                 $('#quarterDropdown').change(function () {
                     const quarterId = $(this).val();
                     if (quarterId) {
                         window.location.href = `/Dashboard/Index?yearQuarterId=${quarterId}`;
                     }
                 });
             });

             function loadYears()
             {
                 $.get('/Dashboard/GetYears', function (years) {
                     let options = '<option value="">@localizer["-- Select Year --"]</option>';
                     years.forEach(y => {
                         options += `<option value="${y}">${y}</option>`;
                     });
                     $('#yearDropdown').html(options);

                     const currentYear = '@ViewBag.CurrentYear';
                     const currentQuarterId = '@ViewBag.CurrentQuarterId';
                     if (currentYear) {
                         $('#yearDropdown').val(currentYear);
                         loadQuarters(currentYear, currentQuarterId);
                     }
                 });
             }

             function loadQuarters(year, selectedId) 
             {
                 $.get(`/Dashboard/GetQuarters?year=${year}`, function (quarters) {
                     let options = '<option value="">@localizer["-- Select Quarter --"]</option>';
                     quarters.forEach(q => {
                         const isSel = q.id.toLowerCase() === (selectedId || '').toLowerCase();
                         options += `<option value="${q.id}" ${isSel ? 'selected' : ''}>${q.name}</option>`;
                     });
                     $('#quarterDropdown').prop('disabled', false).html(options);
                 });
             }
    </script>
}
