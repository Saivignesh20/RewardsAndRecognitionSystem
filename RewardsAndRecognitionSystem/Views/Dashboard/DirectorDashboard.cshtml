@using RewardsAndRecognitionRepository.Models
@using RewardsAndRecognitionRepository.Enums
@model IEnumerable<Nomination>

@{
    ViewData["Title"] = "Director Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var total = ViewBag.TotalNominations;
    var approved = ViewBag.FinalApprovedNominations;
    var rejected = ViewBag.FinalRejectedNominations;
    var pending = total - (approved + rejected);

    var teams = ViewBag.Teams as List<dynamic>;
    var selectedTeamId = ViewBag.SelectedTeamId as string;
    var selectedTeamNominations = ViewBag.SelectedTeamNominations as List<Nomination> ?? new();
    var selectedTeamName = teams?.FirstOrDefault(t => t.TeamId.ToString() == selectedTeamId)?.TeamName ?? "";
}
<h2 class="mb-4"><i class="bi bi-award"></i> Director Dashboard</h2>

<!-- Styling Part-->
<style>
    .dashboard-card {
        background: white;
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
        padding: 20px;
        transition: transform 0.2s ease;
        height: 100%;
        text-decoration: none;
    }

        .dashboard-card:hover {
            transform: translateY(-3px);
            text-decoration: none;
        }

    .dashboard-title {
        font-size: 1rem;
        font-weight: 600;
        color: #555;
    }

    .dashboard-value {
        font-size: 1.75rem;
        font-weight: bold;
        margin-top: 5px;
    }

    .bar-container {
        margin-top: 30px;
    }

    .bar {
        height: 14px;
        border-radius: 6px;
        margin-bottom: 10px;
        transition: width 0.3s ease;
    }

    .text-blue {
        color: #2962FF;
    }

    .text-green {
        color: #2E7D32;
    }

    .text-orange {
        color: #F9A825;
    }
</style>



<div class="row g-4 mb-4">
    <div class="col-md-3">
        <a asp-controller="Nomination" asp-action="Index" asp-route-filter="all" class="dashboard-card text-blue d-block text-decoration-none">
            <div class="dashboard-title">Total Nominations</div>
            <div class="dashboard-value text-blue">@ViewBag.TotalNominations</div>
        </a>
    </div>
    <div class="col-md-3">
        <a asp-controller="Nomination" asp-action="Index" asp-route-filter="pending" class="dashboard-card text-orange d-block text-decoration-none">
            <div class="dashboard-title">Pending Reviews</div>
            <div class="dashboard-value text-orange">@ViewBag.PendingNominations</div>
        </a>
    </div>
    <div class="col-md-3">
        <a asp-controller="Nomination" asp-action="Index" asp-route-filter="directorapproved" class="dashboard-card text-green d-block text-decoration-none">
            <div class="dashboard-title">Final Approved</div>
            <div class="dashboard-value text-green">@ViewBag.FinalApprovedNominations</div>
        </a>
    </div>
    <div class="col-md-3">
        <a asp-controller="Nomination" asp-action="Index" asp-route-filter="directorrejected" class="dashboard-card text-red d-block text-decoration-none">
            <div class="dashboard-title">Final Rejected</div>
            <div class="dashboard-value text-danger">@ViewBag.FinalRejectedNominations</div>
        </a>
    </div>
</div>

 
<h4 class="mt-5"><i class="bi bi-people-fill"></i> Teams Under You</h4>
<div class="accordion mb-5" id="teamsAccordion">
    @for (int i = 0; i < teams.Count; i++)
    {
        var team = teams[i];
        var collapseId = $"collapseTeam{i}";
        var headingId = $"headingTeam{i}";
        <div class="accordion-item">
            <h2 class="accordion-header" id="@headingId">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#@collapseId">
                    @team.TeamName
                </button>
            </h2>
            <div id="@collapseId" class="accordion-collapse collapse" aria-labelledby="@headingId" data-bs-parent="#teamsAccordion">
                <div class="accordion-body">
                    <p><strong>Team Lead:</strong> @team.TeamLeadName</p>
                    <p><strong>Total Nominations by Team Lead:</strong> @team.NominatedCount</p>
                </div>
            </div>
        </div>
    }
</div>

<!-- Graph representation for each team -->
@{
    var chartIndex = 0;
    var teamChartData = ViewBag.TeamStatusData;
}
<!-- Load Chart.js -->
<script src="~/lib/Charts/chart.js"></script>

<h4 class="mt-5"><i class="bi bi-bar-chart-line-fill"></i> Team Wise Statistics </h4>

<!--  CSS to enforce consistent size -->
<style>
    .chart-wrapper {
        height: 275px; 
        max-width: 250px; 
        margin: 0 auto;
    }

        .chart-wrapper canvas {
            width: 100% !important; 
            height: 100% !important;
        }

    .card {
        min-height: 300px;
        padding: 1rem;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        align-items: center;
        text-align: center;
    }
</style>


<div class="container">
    <div class="row">
        @foreach (var team in teamChartData)
        {
            var chartId = $"barChart_{chartIndex}";
            var approvedNominations = Convert.ToInt32(team.Approved);
            var rejectedNominations = Convert.ToInt32(team.Rejected);
            var pendingNominations = Convert.ToInt32(team.Pending);
            <div class="col-md-4 mb-4">
                <div class="card p-3 shadow-sm">
                    <h6 class="text-center">
                        @team.TeamName - @team.Total Nominations
                    </h6>

                    <div class="chart-wrapper">
                        <canvas id="@chartId"></canvas>
                    </div>
                </div>
            </div>
            <script>
                document.addEventListener('DOMContentLoaded', function () {
                    const ctx = document.getElementById('@chartId').getContext('2d');
                    new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: ['Approved', 'Rejected', 'Pending'],
                            datasets: [{
                                label: 'Nominations',
                                data: [@approvedNominations, @rejectedNominations, @pendingNominations],
                                backgroundColor: ['#4caf50', '#f44336', '#ffc107'],
                                borderRadius: 5,
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    precision: 0
                                }
                            },
                            plugins: {
                                legend: {
                                    display: false
                                }
                            }
                        }
                    });
                });
            </script>
            chartIndex++;
        }
    </div>
</div>


<!-- Team Dropdown Selection -->
<h4 class="mt-5"><i class="bi bi-info-circle-fill"></i> View Nominations by Team</h4>
<form method="get" asp-action="Index" class="mb-4 d-flex align-items-center gap-3">
    <label class="form-label mb-0"><strong>Select Team:</strong></label>
    <select name="teamId" class="form-select w-auto" onchange="this.form.submit()">
        <option value="">-- Choose a team --</option>
        @foreach (var team in teams)
        {
            <option value="@team.TeamId" selected="@(team.TeamId.ToString() == selectedTeamId)">
                @team.TeamName
            </option>
        }
    </select>
</form>

@if (!string.IsNullOrEmpty(selectedTeamId))
{
    <div class="modal fade" id="teamNominationsModal" tabindex="-1" aria-labelledby="teamNominationsModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-xl modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="teamNominationsModalLabel">Nominations from @selectedTeamName</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="hideTeamModal()"></button>
                </div>
                <div class="modal-body">

                    <!-- 🔍 Search Input + Export Button -->
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <input type="text" id="searchInput" class="form-control w-25" placeholder="Search by Nominee Name..." onkeyup="filterNominations()" />

                        <a asp-controller="Nomination"
                           asp-action="ExportTeamNominationsToExcel"
                           asp-route-teamId="@selectedTeamId"
                           class="btn btn-success ms-3">
                            <i class="bi bi-file-earmark-excel-fill"></i> Export to Excel
                        </a>
                    </div>

                    @if (selectedTeamNominations.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-bordered table-striped shadow-sm" id="nominationsTable">
                                <thead class="table-primary">
                                    <tr>
                                        <th>#</th>
                                        <th>Nominee</th>
                                        <th>Category</th>
                                        <th>Description</th>
                                        <th>Achievements</th>
                                        <th>Status</th>
                                        <th>Date</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (int i = 0; i < selectedTeamNominations.Count; i++)
                                    {
                                        var n = selectedTeamNominations[i];
                                        <tr>
                                            <td>@(i + 1)</td>
                                            <td>@n.Nominee?.Name</td>
                                            <td>@n.Category?.Name</td>
                                            <td>@n.Description</td>
                                            <td>@n.Achievements</td>
                                            <td>@n.Status</td>
                                            <td>@n.CreatedAt.ToShortDateString()</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info mb-0">
                            No nominations yet for this team.
                        </div>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" onclick="hideTeamModal()">Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal and Filtering Scripts -->
    <script>
        window.addEventListener('load', function () {
            const modalElement = document.getElementById("teamNominationsModal");
            if (modalElement) {
                const modalInstance = new bootstrap.Modal(modalElement);
                modalInstance.show();
            }
        });

        function hideTeamModal() {
            const modalElement = document.getElementById("teamNominationsModal");
            const modalInstance = bootstrap.Modal.getInstance(modalElement);
            if (modalInstance) {
                modalInstance.hide();
                const teamSelect = document.querySelector("select[name='teamId']");
                if (teamSelect) {
                    teamSelect.selectedIndex = 0;
                }

  
                const url = new URL(window.location);
                url.searchParams.delete("teamId");
                window.history.replaceState({}, document.title, url);
            }
        }
        function filterNominations() {
            const input = document.getElementById("searchInput");
            const filter = input.value.toLowerCase();
            const table = document.getElementById("nominationsTable");
            const rows = table.getElementsByTagName("tr");

            for (let i = 1; i < rows.length; i++) {
                const nomineeCell = rows[i].getElementsByTagName("td")[1];
                if (nomineeCell) {
                    const name = nomineeCell.textContent || nomineeCell.innerText;
                    rows[i].style.display = name.toLowerCase().includes(filter) ? "" : "none";
                }
            }
        }
    </script>



}


